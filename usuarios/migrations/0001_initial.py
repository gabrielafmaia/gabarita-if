# Generated by Django 5.2.4 on 2025-11-01 02:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='usuarios-avatar/', verbose_name='Foto de Perfil')),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=150, verbose_name='Sobrenome')),
                ('curso', models.CharField(blank=True, choices=[('Administração', 'Administração'), ('Agricultura', 'Agricultura'), ('Agroecologia', 'Agroecologia'), ('Agropecuária', 'Agropecuária'), ('Alimentos', 'Alimentos'), ('Apicultura', 'Apicultura'), ('Biocombustíveis', 'Biocombustíveis'), ('Comércio', 'Comércio'), ('Controle Ambiental', 'Controle Ambiental'), ('Edificações', 'Edificações'), ('Eletromecânica', 'Eletromecânica'), ('Eletrônica', 'Eletrônica'), ('Eletrotécnica', 'Eletrotécnica'), ('Equipamentos Biomédicos', 'Equipamentos Biomédicos'), ('Estradas', 'Estradas'), ('Eventos', 'Eventos'), ('Geologia', 'Geologia'), ('Guia de Turismo', 'Guia de Turismo'), ('Informática', 'Informática'), ('Informática para Internet', 'Informática para Internet'), ('Instrumento Musical', 'Instrumento Musical'), ('Jogos Digitais', 'Jogos Digitais'), ('Lazer', 'Lazer'), ('Logística', 'Logística'), ('Manutenção e Suporte em Informática', 'Manutenção e Suporte em Informática'), ('Mecânica', 'Mecânica'), ('Mecatrônica', 'Mecatrônica'), ('Meio Ambiente', 'Meio Ambiente'), ('Mineração', 'Mineração'), ('Multimídia', 'Multimídia'), ('Petróleo e Gás', 'Petróleo e Gás'), ('Química', 'Química'), ('Recursos Pesqueiros', 'Recursos Pesqueiros'), ('Redes de Computadores', 'Redes de Computadores'), ('Refrigeração e Climatização', 'Refrigeração e Climatização'), ('Saneamento', 'Saneamento'), ('Secretaria Escolar', 'Secretaria Escolar'), ('Segurança do Trabalho', 'Segurança do Trabalho'), ('Segurança do Trabalho (a distância)', 'Segurança do Trabalho (a distância)'), ('Técnico em Comércio', 'Técnico em Comércio'), ('Técnico em Cooperativismo', 'Técnico em Cooperativismo'), ('Técnico em Edificações', 'Técnico em Edificações'), ('Técnico em Informática', 'Técnico em Informática'), ('Técnico em Manutenção e Suporte em Informática', 'Técnico em Manutenção e Suporte em Informática'), ('Têxtil', 'Têxtil'), ('Vestuário', 'Vestuário'), ('Zootecnia', 'Zootecnia')], max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
